[{"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/restaurants.tsx":"1","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/index.tsx":"2","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/routers/logged-out-router.tsx":"3","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/login.tsx":"4","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/create-account.tsx":"5","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/restaurants.ts":"6","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/restaurants/restaurant.tsx":"7","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/categories/category-list.tsx":"8","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/logos/main-logo.tsx":"9","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/search.tsx":"10","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/routers/logged-in-router.tsx":"11","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/category.tsx":"12","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/categories.ts":"13","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/apollo.ts":"14","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/404.tsx":"15","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/user/update-account.tsx":"16","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/headers/header.tsx":"17","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/errors/form-error.tsx":"18","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/buttons/button.tsx":"19","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/hooks/useMe.tsx":"20","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/user/confirm-email.tsx":"21","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/paginations/pagination.tsx":"22","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/banners/main-banner.tsx":"23","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/titles/title.tsx":"24","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/restaurants/grid-layout.tsx":"25","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/helmets/react-helmet.tsx":"26","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/logos/header-logo.tsx":"27","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/errors/apollo-error.tsx":"28","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/restaurant-detail.tsx":"29","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/banners/restaurant-banner.tsx":"30","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/app.tsx":"31","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/services/RegExp/account.ts":"32","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/constants.ts":"33","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx":"34","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/reportWebVitals.ts":"35","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/create-restaurant.tsx":"36","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx":"37","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/create-dish.tsx":"38","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/dishes.ts":"39","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/dishes/dish.tsx":"40","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/dishes/dish-option.tsx":"41","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/__generated__/globalTypes.ts":"42"},{"size":4794,"mtime":1612497074597,"results":"43","hashOfConfig":"44"},{"size":771,"mtime":1612402580225,"results":"45","hashOfConfig":"44"},{"size":606,"mtime":1610531295401,"results":"46","hashOfConfig":"44"},{"size":3983,"mtime":1612504451285,"results":"47","hashOfConfig":"44"},{"size":4458,"mtime":1612504399668,"results":"48","hashOfConfig":"44"},{"size":218,"mtime":1613522670737,"results":"49","hashOfConfig":"44"},{"size":794,"mtime":1611733276549,"results":"50","hashOfConfig":"44"},{"size":1263,"mtime":1611718266480,"results":"51","hashOfConfig":"44"},{"size":181,"mtime":1611557194187,"results":"52","hashOfConfig":"44"},{"size":3005,"mtime":1611718596114,"results":"53","hashOfConfig":"44"},{"size":3126,"mtime":1613522160517,"results":"54","hashOfConfig":"44"},{"size":2511,"mtime":1611718118447,"results":"55","hashOfConfig":"44"},{"size":182,"mtime":1611641948765,"results":"56","hashOfConfig":"44"},{"size":1064,"mtime":1612744319818,"results":"57","hashOfConfig":"44"},{"size":436,"mtime":1611557077221,"results":"58","hashOfConfig":"44"},{"size":3898,"mtime":1612621726625,"results":"59","hashOfConfig":"44"},{"size":927,"mtime":1613354499644,"results":"60","hashOfConfig":"44"},{"size":308,"mtime":1612491008597,"results":"61","hashOfConfig":"44"},{"size":566,"mtime":1613528049786,"results":"62","hashOfConfig":"44"},{"size":288,"mtime":1612167812519,"results":"63","hashOfConfig":"44"},{"size":1921,"mtime":1611557143802,"results":"64","hashOfConfig":"44"},{"size":1305,"mtime":1611560862926,"results":"65","hashOfConfig":"44"},{"size":467,"mtime":1611648078978,"results":"66","hashOfConfig":"44"},{"size":689,"mtime":1611648305129,"results":"67","hashOfConfig":"44"},{"size":776,"mtime":1611649671905,"results":"68","hashOfConfig":"44"},{"size":292,"mtime":1611557059565,"results":"69","hashOfConfig":"44"},{"size":248,"mtime":1611557197881,"results":"70","hashOfConfig":"44"},{"size":556,"mtime":1611222015358,"results":"71","hashOfConfig":"44"},{"size":8772,"mtime":1613978539476,"results":"72","hashOfConfig":"44"},{"size":414,"mtime":1611738124270,"results":"73","hashOfConfig":"44"},{"size":380,"mtime":1612145681777,"results":"74","hashOfConfig":"44"},{"size":112,"mtime":1610353823412,"results":"75","hashOfConfig":"44"},{"size":49,"mtime":1610510055242,"results":"76","hashOfConfig":"44"},{"size":1874,"mtime":1613365718637,"results":"77","hashOfConfig":"44"},{"size":425,"mtime":1610071229950,"results":"78","hashOfConfig":"44"},{"size":4817,"mtime":1613370726042,"results":"79","hashOfConfig":"44"},{"size":4752,"mtime":1613530861527,"results":"80","hashOfConfig":"44"},{"size":7993,"mtime":1613452985374,"results":"81","hashOfConfig":"44"},{"size":527,"mtime":1613456263550,"results":"82","hashOfConfig":"44"},{"size":1671,"mtime":1613612286105,"results":"83","hashOfConfig":"44"},{"size":858,"mtime":1613611955409,"results":"84","hashOfConfig":"44"},{"size":2089,"mtime":1613978465954,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"o3ox6o",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/restaurants.tsx",[],["182","183"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/index.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/routers/logged-out-router.tsx",[],["184","185"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/login.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/create-account.tsx",[],["186","187"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/restaurants.ts",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/restaurants/restaurant.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/categories/category-list.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/logos/main-logo.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/search.tsx",["188","189"],"import { gql, useLazyQuery } from '@apollo/client';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport MainBanner from '../../components/common/banners/main-banner';\nimport ReactHelmet from '../../components/common/helmets/react-helmet';\nimport Pagination from '../../components/common/paginations/pagination';\nimport GridLayout from '../../components/common/restaurants/grid-layout';\nimport Title from '../../components/common/titles/title';\nimport { RESTAURANT_FRAGMENT } from '../../graphql/fragments/restaurants';\nimport {\n  SearchRestaurantsQuery,\n  SearchRestaurantsQueryVariables,\n} from '../../__generated__/SearchRestaurantsQuery';\n\nconst SEARCH_RESTAURANTS_QUERY = gql`\n  query SearchRestaurantsQuery(\n    $searchRestaurantsInput: SearchRestaurantsInput!\n  ) {\n    searchRestaurants(input: $searchRestaurantsInput) {\n      result\n      error\n      totalPages\n      totalResults\n      results {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nfunction Search() {\n  const location = useLocation();\n  const history = useHistory();\n  const [keyword, setKeyword] = useState<string>();\n  const [page, setPage] = useState<number>(1);\n  const [\n    callSearchRestaurantsQuery,\n    { loading, data: searchRestaurantsData, called },\n  ] = useLazyQuery<SearchRestaurantsQuery, SearchRestaurantsQueryVariables>(\n    SEARCH_RESTAURANTS_QUERY,\n  );\n  useEffect(() => {\n    const [, query] = location.search.split('?keyword=');\n    if (!query) {\n      return history.replace('/');\n    }\n    setKeyword(query);\n    callSearchRestaurantsQuery({\n      variables: {\n        searchRestaurantsInput: {\n          query,\n        },\n      },\n    });\n  }, [location, history, callSearchRestaurantsQuery]);\n  const handlePrevPage = (): void => {\n    setPage(page - 1);\n  };\n  const handleNextPage = (): void => {\n    setPage(page + 1);\n  };\n  return (\n    <>\n      <ReactHelmet title=\"Search\" />\n      <div className=\"w-full\">\n        <div>\n          {searchRestaurantsData?.searchRestaurants.result && <MainBanner />}\n        </div>\n        <div className=\"max-w-screen-xl items-center mt-5 mx-10\">\n          <div className=\"flex flex-col divide-y divide-gray-90\">\n            <Title\n              text={`${keyword}으로 검색한 결과: ${searchRestaurantsData?.searchRestaurants.totalResults}`}\n            />\n            {searchRestaurantsData?.searchRestaurants.results && (\n              <GridLayout\n                restaurants={searchRestaurantsData.searchRestaurants.results}\n              />\n            )}\n            {searchRestaurantsData?.searchRestaurants.totalPages && (\n              <Pagination\n                totalPages={searchRestaurantsData?.searchRestaurants.totalPages}\n                currentPage={page}\n                onPrevPage={handlePrevPage}\n                onNextPage={handleNextPage}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Search;\n","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/category.tsx",["190","191","192"],"import { gql, useQuery } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainBanner from '../../components/common/banners/main-banner';\nimport ReactHelmet from '../../components/common/helmets/react-helmet';\nimport Pagination from '../../components/common/paginations/pagination';\nimport GridLayout from '../../components/common/restaurants/grid-layout';\nimport Title from '../../components/common/titles/title';\nimport { CATEGORY_FRAGMENT } from '../../graphql/fragments/categories';\nimport { RESTAURANT_FRAGMENT } from '../../graphql/fragments/restaurants';\nimport {\n  CategoryQuery,\n  CategoryQueryVariables,\n} from '../../__generated__/CategoryQuery';\n\ninterface ICategoryParams {\n  slug: string;\n}\nconst CATEGORY_QUERY = gql`\n  query CategoryQuery($categoryInput: CategoryInput!) {\n    category(input: $categoryInput) {\n      result\n      error\n      totalPages\n      totalResults\n      category {\n        ...CategoryParts\n      }\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${CATEGORY_FRAGMENT}\n`;\n\nfunction Category() {\n  const [page, setPage] = useState<number>(1);\n  const { slug } = useParams<ICategoryParams>();\n  const { loading, error, data: categoryData, called } = useQuery<\n    CategoryQuery,\n    CategoryQueryVariables\n  >(CATEGORY_QUERY, {\n    variables: {\n      categoryInput: {\n        slug,\n      },\n    },\n  });\n  const handlePrevPage = (): void => {\n    setPage(page - 1);\n  };\n  const handleNextPage = (): void => {\n    setPage(page + 1);\n  };\n  return (\n    <>\n      <ReactHelmet title=\"Category\" />\n      <div className=\"w-full\">\n        <div>{categoryData?.category.result && <MainBanner />}</div>\n        <div className=\"max-w-screen-xl items-center mt-5 mx-10\">\n          <div className=\"flex flex-col divide-y divide-gray-90\">\n            <Title\n              text={`Category of ${categoryData?.category.category?.name}`}\n            />\n            {categoryData?.category.restaurants && (\n              <GridLayout restaurants={categoryData?.category.restaurants} />\n            )}\n            {categoryData?.category.totalPages && (\n              <Pagination\n                totalPages={categoryData.category.totalPages}\n                currentPage={page}\n                onPrevPage={handlePrevPage}\n                onNextPage={handleNextPage}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Category;\n","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/categories.ts",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/apollo.ts",[],["193","194"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/404.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/user/update-account.tsx",[],["195","196"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/headers/header.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/errors/form-error.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/buttons/button.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/hooks/useMe.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/user/confirm-email.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/paginations/pagination.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/banners/main-banner.tsx",[],["197","198"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/titles/title.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/restaurants/grid-layout.tsx",["199"],"import React from 'react';\nimport Restaurant from '../../restaurants/restaurant';\n\ninterface Restaurant {\n  id: string;\n  name: string;\n  coverImage: string;\n  category: {\n    name: string;\n  } | null;\n  address: string;\n  isPromoted: boolean;\n}\n\ninterface IGridLayoutProps {\n  restaurants: Restaurant[];\n}\n\nfunction GridLayout({ restaurants }: IGridLayoutProps) {\n  return (\n    <div className=\"max-w-screen-sm md:max-w-screen-2xl flex flex-col md:grid md:grid-cols-3 md:gap-7 pb-10 pt-5\">\n      {restaurants.map(({ id, coverImage, name, category }) => (\n        <Restaurant\n          id={id}\n          coverImage={coverImage}\n          name={name}\n          categoryName={category?.name}\n          key={id}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default GridLayout;\n","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/helmets/react-helmet.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/logos/header-logo.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/errors/apollo-error.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/client/restaurant-detail.tsx",["200","201","202"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/common/banners/restaurant-banner.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/app.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/services/RegExp/account.ts",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/constants.ts",[],["203","204"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/my-restaurants.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/reportWebVitals.ts",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/create-restaurant.tsx",["205","206","207"],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/my-restaurant.tsx",["208","209","210"],"import { gql, useQuery } from '@apollo/client';\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport {\n  VictoryAxis,\n  VictoryChart,\n  VictoryLabel,\n  VictoryLine,\n  VictoryTooltip,\n  VictoryVoronoiContainer,\n} from 'victory';\nimport RestaurantBanner from '../../components/common/banners/restaurant-banner';\nimport ReactHelmet from '../../components/common/helmets/react-helmet';\nimport { Dish } from '../../components/dishes/dish';\nimport { DISH_FRAGMENT } from '../../graphql/fragments/dishes';\nimport { ORDER_FRAGMENT } from '../../graphql/fragments/orders';\nimport { RESTAURANT_FRAGMENT } from '../../graphql/fragments/restaurants';\nimport { kRWFormat } from '../../services/Numbers/money';\nimport {\n  MyRestaurant,\n  MyRestaurantVariables,\n} from '../../__generated__/MyRestaurant';\n\ninterface IParamsProps {\n  id: string;\n}\n\nexport const MY_RESTAURANT_QUERY = gql`\n  query MyRestaurant($myRestaurantInput: MyRestaurantInput!) {\n    myRestaurant(input: $myRestaurantInput) {\n      result\n      error\n      restaurant {\n        ...RestaurantParts\n        menu {\n          ...DishParts\n        }\n        orders {\n          ...OrderParts\n        }\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n  ${DISH_FRAGMENT}\n  ${ORDER_FRAGMENT}\n`;\nconst chartData = [\n  { x: 1, y: 3000 },\n  { x: 2, y: 1500 },\n  { x: 3, y: 4250 },\n  { x: 4, y: 1250 },\n  { x: 5, y: 2300 },\n  { x: 6, y: 7150 },\n  { x: 7, y: 6830 },\n  { x: 8, y: 6830 },\n  { x: 9, y: 6830 },\n  { x: 10, y: 6830 },\n  { x: 11, y: 6830 },\n];\nfunction MyRestaurantPage() {\n  const { id: restaurantId } = useParams<IParamsProps>();\n  const { loading, error, data } = useQuery<\n    MyRestaurant,\n    MyRestaurantVariables\n  >(MY_RESTAURANT_QUERY, {\n    variables: {\n      myRestaurantInput: {\n        restaurantId: +restaurantId,\n      },\n    },\n  });\n  return (\n    <>\n      <ReactHelmet title=\"My Restaurant\" />\n      <div>\n        {data?.myRestaurant.restaurant?.coverImage && (\n          <RestaurantBanner\n            coverImage={data.myRestaurant.restaurant.coverImage}\n          />\n        )}\n        <div className=\"container mt-10\">\n          <h2 className=\"text-4xl font-medium mb-10\">\n            {data?.myRestaurant.restaurant?.name || 'Loading...'}\n          </h2>\n          <Link\n            to={`/restaurant-detail/${restaurantId}/create-dish`}\n            className=\"mr-8 text-white bg-gray-800 py-3 px-10\">\n            Add Dish &rarr;\n          </Link>\n          <Link to={` `} className=\"text-white bg-lime-700 py-3 px-10\">\n            Buy Promotion &rarr;\n          </Link>\n          <div className=\"mt-10\">\n            {data?.myRestaurant.restaurant?.menu.length === 0 ? (\n              <h4 className=\"text-xl mb-5\">Please upload a dish.</h4>\n            ) : (\n              <div className=\"grid mt-16 md:grid-cols-3 gap-x-5 gap-y-10\">\n                {data?.myRestaurant.restaurant?.menu.map((dish) => (\n                  <Dish\n                    id={dish.id}\n                    name={dish.name}\n                    description={dish.description}\n                    price={dish.price}\n                    key={dish.id}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n          <div className=\"mt-20 mb-10\">\n            <h4 className=\"text-center text-2xl font-medium\">Sales</h4>\n            <div className=\"mt-10\">\n              <VictoryChart\n                width={window.innerWidth}\n                height={500}\n                domainPadding={50}\n                containerComponent={<VictoryVoronoiContainer />}>\n                <VictoryLine\n                  labels={({ datum }) => kRWFormat(datum.y)}\n                  labelComponent={\n                    <VictoryTooltip\n                      style={{ fontSize: 18 } as any}\n                      renderInPortal\n                      dy={-20}\n                    />\n                  }\n                  data={data?.myRestaurant.restaurant?.orders.map((order) => ({\n                    x: order.createdAt,\n                    y: order.total,\n                  }))}\n                  interpolation=\"natural\"\n                  style={{\n                    data: {\n                      strokeWidth: 5,\n                    },\n                  }}\n                />\n                <VictoryAxis\n                  tickLabelComponent={<VictoryLabel renderInPortal />}\n                  style={{\n                    tickLabels: {\n                      fontSize: 20,\n                    },\n                  }}\n                  tickFormat={(tick) => new Date(tick).toLocaleDateString('ko')}\n                />\n              </VictoryChart>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default MyRestaurantPage;\n","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/pages/owner/create-dish.tsx",["211","212"],"import { gql, useMutation } from '@apollo/client';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Button from '../../components/common/buttons/button';\nimport FormError from '../../components/common/errors/form-error';\nimport ReactHelmet from '../../components/common/helmets/react-helmet';\nimport {\n  CreateDish,\n  CreateDishVariables,\n} from '../../__generated__/CreateDish';\nimport { MY_RESTAURANT_QUERY } from './my-restaurant';\n\ninterface IParams {\n  id: string;\n}\n\ninterface IFormProps {\n  name: string;\n  price: string;\n  description: string;\n  [key: string]: string;\n}\n\nconst CREATE_DISH_MUTATION = gql`\n  mutation CreateDish($createDishInput: CreateDishInput!) {\n    createDish(input: $createDishInput) {\n      result\n      error\n    }\n  }\n`;\n\nfunction CreateDishPage() {\n  const { id: restaurantId } = useParams<IParams>();\n  const history = useHistory();\n  const [optionsId, setOptionsId] = useState<number[]>([]);\n  const [choicesId, setChoicesId] = useState<number[]>([]);\n  const onCompleted = () => {\n    history.goBack();\n  };\n  const [createDishMutation, { loading, error, data }] = useMutation<\n    CreateDish,\n    CreateDishVariables\n  >(CREATE_DISH_MUTATION, {\n    refetchQueries: [\n      {\n        query: MY_RESTAURANT_QUERY,\n        variables: {\n          myRestaurantInput: {\n            restaurantId: +restaurantId,\n          },\n        },\n      },\n    ],\n    onCompleted,\n  });\n  const {\n    register,\n    handleSubmit,\n    formState,\n    getValues,\n    setValue,\n    errors,\n  } = useForm<IFormProps>({\n    mode: 'onChange',\n  });\n  const onSubmit = () => {\n    const { description, name, price, ...rest } = getValues();\n    const options = optionsId.map((optionId) => ({\n      name: rest[`optionName-${optionId}`],\n      extra: +rest[`optionExtra-${optionId}`],\n      choices: choicesId.map((choiceId) => ({\n        name: rest[`option-${optionId}-choiceName-${choiceId}`],\n        extra: +rest[`option-${optionId}-choiceExtra-${choiceId}`],\n      })),\n    }));\n    createDishMutation({\n      variables: {\n        createDishInput: {\n          name,\n          price: +price,\n          description,\n          restaurantId,\n          options,\n        },\n      },\n    });\n  };\n  const onAddDishOptionClick = () => {\n    setOptionsId((current) => [Date.now(), ...current]);\n  };\n\n  const onDeleteDishOptionClick = (idToDelete: number) => {\n    setOptionsId((current) => current.filter((id) => id !== idToDelete));\n    setValue(`optionName-${idToDelete}`, '');\n    setValue(`optionExtra-${idToDelete}`, '');\n  };\n\n  const onAddChoiceClick = () => {\n    setChoicesId((current) => [Date.now(), ...current]);\n  };\n\n  const onDeleteChoiceClick = (idToDelete: number) => {\n    setChoicesId((current) => current.filter((id) => id !== idToDelete));\n    setValue(`choiceName-${idToDelete}`, '');\n    setValue(`choiceExtra-${idToDelete}`, '');\n  };\n\n  return (\n    <>\n      <ReactHelmet title=\"Create Dish\" />\n      <div className=\"container\">\n        <div className=\"xl:w-5/12 flex flex-col mx-auto mt-40\">\n          <h1 className=\"font-bold text-2xl\">Create Dish</h1>\n          <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n            <input\n              ref={register({ required: 'name is required!' })}\n              className=\"input\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n            <input\n              type=\"number\"\n              ref={register({ required: 'price is required!' })}\n              className=\"input\"\n              name=\"price\"\n              placeholder=\"Price\"\n              min={0}\n            />\n            <input\n              ref={register({\n                required: 'description is required!',\n                minLength: 6,\n              })}\n              className=\"input\"\n              name=\"description\"\n              placeholder=\"Description\"\n              minLength={6}\n            />\n            <div className=\"my-2\">\n              <h4 className=\"font-medium mb-3 text-lg\">Dish Options</h4>\n              <span\n                onClick={onAddDishOptionClick}\n                className=\"cursor-pointer text-white bg-gray-900 py-1 px-2 mt-2\">\n                Add Dish Option\n              </span>\n              {optionsId.length !== 0 &&\n                optionsId.map((optionId, index) => (\n                  <div\n                    className=\"mt-5 flex flex-col border-gray-300 border-t-2\"\n                    key={optionId}>\n                    <div>Dish Option #{index + 1}</div>\n                    <div>\n                      <input\n                        ref={register}\n                        name={`optionName-${optionId}`}\n                        className=\"px-6 py-2 focus:outline-none focus:border-gray-600 border-2 mr-2\"\n                        placeholder=\"Option Name\"\n                      />\n                      <input\n                        ref={register}\n                        name={`optionExtra-${optionId}`}\n                        className=\"px-2 py-2 focus:outline-none focus:border-gray-600 border-2 mr-2\"\n                        type=\"number\"\n                        placeholder=\"Option Extra Price\"\n                        defaultValue={0}\n                      />\n                      <span\n                        onClick={() => onDeleteDishOptionClick(optionId)}\n                        className=\"px-4 py-2 cursor-pointer text-white bg-red-500\">\n                        Delete\n                      </span>\n                    </div>\n                    <div className=\"my-2\">\n                      <h4 className=\"font-light mb-3 text-sm\">Choices</h4>\n                      <span\n                        onClick={onAddChoiceClick}\n                        className=\"cursor-pointer text-white bg-gray-900 py-1 px-2 mt-2\">\n                        Add Choices\n                      </span>\n                      {choicesId.length !== 0 &&\n                        choicesId.map((choiceId, index) => (\n                          <div className=\"mt-5 flex flex-col\" key={choiceId}>\n                            <div>Choice #{index + 1}</div>\n                            <div>\n                              <input\n                                ref={register}\n                                name={`option-${optionId}-choiceName-${choiceId}`}\n                                className=\"px-6 py-2 focus:outline-none focus:border-gray-600 border-2 mr-2\"\n                                placeholder=\"Choice Name\"\n                              />\n                              <input\n                                ref={register}\n                                name={`option-${optionId}-choiceExtra-${choiceId}`}\n                                className=\"px-2 py-2 focus:outline-none focus:border-gray-600 border-2 mr-2\"\n                                type=\"number\"\n                                placeholder=\"Choice Extra Price\"\n                                defaultValue={0}\n                              />\n                              <span\n                                onClick={() => onDeleteChoiceClick(choiceId)}\n                                className=\"px-4 py-2 cursor-pointer text-white bg-red-500\">\n                                Delete\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ))}\n            </div>\n            {errors.description?.message && (\n              <FormError\n                title=\"description-length-error\"\n                errorMessage={errors.description?.message}\n              />\n            )}\n            <Button\n              actionText=\"Create Dish\"\n              canClick={formState.isValid}\n              loading={loading}\n              name=\"create-dish\"\n            />\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreateDishPage;\n","/Users/joseonghwan/tutorial/nuber-eats-frontend/src/graphql/fragments/dishes.ts",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/dishes/dish.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/components/dishes/dish-option.tsx",[],"/Users/joseonghwan/tutorial/nuber-eats-frontend/src/__generated__/globalTypes.ts",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"213","replacedBy":"217"},{"ruleId":"215","replacedBy":"218"},{"ruleId":"213","replacedBy":"219"},{"ruleId":"215","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":39,"column":7,"nodeType":"223","messageId":"224","endLine":39,"endColumn":14},{"ruleId":"221","severity":1,"message":"225","line":39,"column":45,"nodeType":"223","messageId":"224","endLine":39,"endColumn":51},{"ruleId":"221","severity":1,"message":"222","line":41,"column":11,"nodeType":"223","messageId":"224","endLine":41,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":41,"column":20,"nodeType":"223","messageId":"224","endLine":41,"endColumn":25},{"ruleId":"221","severity":1,"message":"225","line":41,"column":47,"nodeType":"223","messageId":"224","endLine":41,"endColumn":53},{"ruleId":"213","replacedBy":"227"},{"ruleId":"215","replacedBy":"228"},{"ruleId":"213","replacedBy":"229"},{"ruleId":"215","replacedBy":"230"},{"ruleId":"213","replacedBy":"231"},{"ruleId":"215","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":4,"column":11,"nodeType":"223","messageId":"235","endLine":4,"endColumn":21},{"ruleId":"221","severity":1,"message":"222","line":53,"column":11,"nodeType":"223","messageId":"224","endLine":53,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":53,"column":20,"nodeType":"223","messageId":"224","endLine":53,"endColumn":25},{"ruleId":"221","severity":1,"message":"236","line":71,"column":42,"nodeType":"223","messageId":"224","endLine":71,"endColumn":54},{"ruleId":"213","replacedBy":"237"},{"ruleId":"215","replacedBy":"238"},{"ruleId":"221","severity":1,"message":"222","line":76,"column":38,"nodeType":"223","messageId":"224","endLine":76,"endColumn":45},{"ruleId":"221","severity":1,"message":"226","line":76,"column":47,"nodeType":"223","messageId":"224","endLine":76,"endColumn":52},{"ruleId":"221","severity":1,"message":"239","line":87,"column":5,"nodeType":"223","messageId":"224","endLine":87,"endColumn":11},{"ruleId":"221","severity":1,"message":"240","line":48,"column":7,"nodeType":"223","messageId":"224","endLine":48,"endColumn":16},{"ruleId":"221","severity":1,"message":"222","line":63,"column":11,"nodeType":"223","messageId":"224","endLine":63,"endColumn":18},{"ruleId":"221","severity":1,"message":"226","line":63,"column":20,"nodeType":"223","messageId":"224","endLine":63,"endColumn":25},{"ruleId":"221","severity":1,"message":"226","line":42,"column":41,"nodeType":"223","messageId":"224","endLine":42,"endColumn":46},{"ruleId":"221","severity":1,"message":"241","line":42,"column":48,"nodeType":"223","messageId":"224","endLine":42,"endColumn":52},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],["242"],["243"],["242"],["243"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'called' is assigned a value but never used.","'error' is assigned a value but never used.",["242"],["243"],["242"],["243"],["242"],["243"],"@typescript-eslint/no-redeclare","'Restaurant' is already defined.","redeclared","'placingOrder' is assigned a value but never used.",["242"],["243"],"'errors' is assigned a value but never used.","'chartData' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]